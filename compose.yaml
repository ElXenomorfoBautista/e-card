services:
    postgres:
        image: postgres:alpine
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
        volumes:
            - dbdata:/var/lib/postgresql/data
        networks:
            - lp4net
        ports:
            - 5432:5432
        healthcheck:
            test: ['CMD', 'pg_isready', '-U', 'postgres']
            interval: 5s
            timeout: 5s
            retries: 5

    redis:
        image: redis
        networks:
            - lp4net

    backend:
        build: .
        container_name: backend
        networks:
            - lp4net
        volumes:
            - .:/backend
            - /backend/node_modules # Esto previene que node_modules del host sobrescriba el del contenedor
        ports:
            - 3000:3000
        environment:
            - DB_HOST=postgres
            - DB_USER=${DB_USER}
            - REDIS_HOST=redis
            - DB_PASSWORD=${DB_PASSWORD}

        command: sh -c "npm run db:migrate && npm run start"
        depends_on:
            postgres:
                condition: service_healthy

volumes:
    dbdata:

networks:
    lp4net:
        driver: bridge
