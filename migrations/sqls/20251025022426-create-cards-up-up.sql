-- ============================================
-- MIGRACIÓN: Cards
-- ============================================
SET search_path TO e_card, public;

-- Tabla: cards
CREATE TABLE e_card.cards (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_id integer NOT NULL,
    tenant_id integer NOT NULL,
    duplicated_from_id integer,
    slug varchar(100) NOT NULL,
    title varchar(200) NOT NULL,
    profession varchar(150),
    description text,
    logo_url varchar(500),
    is_active bool DEFAULT true,
    qr_code_url varchar(500),
    view_count integer DEFAULT 0,
    created_on timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modified_on timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by integer,
    modified_by integer,
    deleted bool NOT NULL DEFAULT false,
    deleted_on timestamptz DEFAULT CURRENT_TIMESTAMP,
    deleted_by varchar(200),
    CONSTRAINT pk_cards_id PRIMARY KEY (id),
    CONSTRAINT cards_slug_key UNIQUE (slug),
    CONSTRAINT fk_cards_user_id FOREIGN KEY (user_id)
        REFERENCES e_card.users(id) ON DELETE NO ACTION,
    CONSTRAINT fk_cards_tenant_id FOREIGN KEY (tenant_id)
        REFERENCES e_card.tenants(id) ON DELETE NO ACTION,
    CONSTRAINT fk_cards_duplicated_from_id FOREIGN KEY (duplicated_from_id)
        REFERENCES e_card.cards(id) ON DELETE NO ACTION,
    CONSTRAINT chk_cards_slug_format CHECK (
        slug ~ '^[a-z0-9\-]+$' AND
        length(slug) >= 3
    )
);

-- Índices
CREATE INDEX idx_cards_user_id ON e_card.cards (user_id);
CREATE INDEX idx_cards_tenant_id ON e_card.cards (tenant_id);
CREATE INDEX idx_cards_duplicated_from_id ON e_card.cards (duplicated_from_id);
CREATE INDEX idx_cards_slug ON e_card.cards (slug) WHERE deleted = false;
CREATE INDEX idx_cards_is_active ON e_card.cards (is_active) WHERE deleted = false;

-- Triggers
CREATE TRIGGER mdt_cards
BEFORE UPDATE ON e_card.cards
FOR EACH ROW EXECUTE PROCEDURE public.moddatetime();

CREATE TRIGGER cards_audit_trigger
AFTER INSERT OR UPDATE OR DELETE ON e_card.cards
FOR EACH ROW EXECUTE PROCEDURE logs.audit_trigger('APPLICATION_LOGS');
